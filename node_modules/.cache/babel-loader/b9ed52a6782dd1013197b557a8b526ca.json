{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\devreactjs\\\\01-contador-voltas\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport MostraVoltas from './ShowLaps';\nimport MostraTempo from './ShowTime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [numVoltas, setNumVoltas] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [tempo, setTempo] = useState(0);\n  useEffect(() => {\n    let timer = null;\n\n    if (running) {\n      timer = setInterval(() => {\n        setTempo(old => old + 1);\n      }, 500);\n    }\n\n    return () => {\n      if (timer) {\n        // vai retornar um truthy, valor que é convertido para verdadeiro\n        clearInterval(timer);\n      }\n    };\n  }, [running]); //Ao passar o colchetes, ele so vai ser chamado na primeira vez\n\n  const toggleRunning = () => {\n    setRunning(!running);\n  };\n\n  const increment = () => {\n    setNumVoltas(numVoltas + 1);\n  };\n\n  const decrement = () => {\n    setNumVoltas(numVoltas - 1);\n  };\n\n  const reset = () => {\n    setNumVoltas(0);\n    setTempo(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MostraVoltas, {\n      voltas: numVoltas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"+\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"-\",\n      onClick: decrement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), numVoltas > 0 && /*#__PURE__*/_jsxDEV(MostraTempo, {\n      tempo: Math.round(tempo / numVoltas)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleRunning,\n      text: \"Iniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: reset,\n      text: \"Reiniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XxOwaQAHii7S9hCTxPgdBA27DWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/workspace/devreactjs/01-contador-voltas/src/App.js"],"names":["useState","useEffect","MostraVoltas","MostraTempo","App","numVoltas","setNumVoltas","running","setRunning","tempo","setTempo","timer","setInterval","old","clearInterval","toggleRunning","increment","decrement","reset","Math","round"],"mappings":";;;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,YAAP,MAAyB,YAAzB;AACA,OAAOC,WAAP,MAAwB,YAAxB;;;AAMA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAyBR,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,CAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEZ,QAAIU,KAAK,GAAG,IAAZ;;AACA,QAAGJ,OAAH,EAAW;AAETI,MAAAA,KAAK,GAAGC,WAAW,CAAC,MAAI;AACtBF,QAAAA,QAAQ,CAACG,GAAG,IAAIA,GAAG,GAAE,CAAb,CAAR;AACD,OAFkB,EAEjB,GAFiB,CAAnB;AAGD;;AACD,WAAO,MAAI;AACT,UAAGF,KAAH,EAAS;AAAE;AACTG,QAAAA,aAAa,CAACH,KAAD,CAAb;AACD;AACF,KAJD;AAKD,GAdQ,EAcP,CAACJ,OAAD,CAdO,CAAT,CANa,CAoBA;;AAEb,QAAMQ,aAAa,GAAC,MAAI;AACtBP,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,QAAMS,SAAS,GAAG,MAAI;AACpBV,IAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AAED,GAHD;;AAKA,QAAMY,SAAS,GAAG,MAAI;AACpBX,IAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AACD,GAFD;;AAIA,QAAMa,KAAK,GAAG,MAAI;AAChBZ,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAGL;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,GAAf;AAAmB,MAAA,OAAO,EAAIW;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,GAAf;AAAmB,MAAA,OAAO,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAHF,EAMIZ,SAAS,GAAG,CAAZ,iBACA,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEc,IAAI,CAACC,KAAL,CAAWX,KAAK,GAACJ,SAAjB;AAApB;AAAA;AAAA;AAAA;AAAA,YAPJ,eASE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEU,aAAjB;AAAgC,MAAA,IAAI,EAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAGG,KAAlB;AAAyB,MAAA,IAAI,EAAG;AAAhC;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxDQd,G;;KAAAA,G;AA0DT,eAAeA,GAAf","sourcesContent":["\nimport {useState, useEffect} from 'react'\n\nimport MostraVoltas from './ShowLaps'\nimport MostraTempo from './ShowTime'\n\n\n\n\n\nfunction App() {\n\n  const [numVoltas,setNumVoltas] = useState(0)\n  const [running, setRunning] =  useState(false)\n  const [tempo,setTempo] = useState(0)\n\n  useEffect(()=>{\n    \n    let timer = null\n    if(running){\n\n      timer = setInterval(()=>{\n        setTempo(old => old +1)\n      },500)\n    }\n    return ()=>{\n      if(timer){ // vai retornar um truthy, valor que é convertido para verdadeiro\n        clearInterval(timer)\n      }\n    }\n  },[running]) //Ao passar o colchetes, ele so vai ser chamado na primeira vez\n  \n  const toggleRunning=()=>{\n    setRunning(!running)\n  }\n\n  const increment = ()=>{\n    setNumVoltas(numVoltas+1)\n    \n  }\n\n  const decrement = ()=>{\n    setNumVoltas(numVoltas-1)\n  }\n\n  const reset = ()=>{\n    setNumVoltas(0)\n    setTempo(0) \n  }\n\n\n  return (\n    <div className=\"App\">\n      <MostraVoltas voltas ={numVoltas}/>\n      <Button text = '+' onClick = {increment}/>\n      <Button text = '-' onClick={decrement}/>\n      \n      {\n        numVoltas > 0 &&\n        <MostraTempo tempo={Math.round(tempo/numVoltas)} />\n      }\n      <Button onClick={toggleRunning} text = 'Iniciar'/>\n      <Button onClick ={reset} text = 'Reiniciar'/>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}