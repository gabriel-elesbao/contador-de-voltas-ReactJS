{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\devreactjs\\\\01-contador-voltas\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MostraVoltas = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.voltas, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Voltas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = MostraVoltas;\n\nconst MostraTempo = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.tempo, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Tempo m\\xE9dio por volta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = MostraTempo;\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.onClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 26\n}, this);\n\n_c3 = Button;\n\nfunction App() {\n  _s();\n\n  const [numVoltas, setNumVoltas] = useState(14);\n  const [running, setRunning] = useState(false);\n  const [tempo, setTempo] = useState(0);\n  useEffect(() => {\n    let timer = null;\n\n    if (running) {\n      timer = setInterval(() => {\n        setTempo(old => old + 1);\n      }, 1000);\n    }\n\n    return () => {\n      if (timer) {\n        // vai retornar um truthy, valor que é convertido para verdadeiro\n        clearInterval(timer);\n      }\n    };\n  }, [running]); //Ao passar o colchetes, ele so vai ser chamado na primeira vez\n\n  const toggleRunning = () => {\n    setRunning(!running);\n  };\n\n  const increment = () => {\n    setNumVoltas(numVoltas + 1);\n  };\n\n  const decrement = () => {\n    setNumVoltas(numVoltas - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MostraVoltas, {\n      voltas: numVoltas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"+\",\n      onClick: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"-\",\n      onClick: decrement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MostraTempo, {\n      tempo: tempo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleRunning,\n      text: \"Iniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Reiniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2pB+cqmJ1qJkcXVIexsSvs90dS0=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MostraVoltas\");\n$RefreshReg$(_c2, \"MostraTempo\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/workspace/devreactjs/01-contador-voltas/src/App.js"],"names":["useState","useEffect","MostraVoltas","props","voltas","MostraTempo","tempo","Button","onClick","text","App","numVoltas","setNumVoltas","running","setRunning","setTempo","timer","setInterval","old","clearInterval","toggleRunning","increment","decrement"],"mappings":";;;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAS;AAC5B,sBACA;AAAA,eACGA,KAAK,CAACC,MADT,oBACiB;AAAA;AAAA;AAAA;AAAA,YADjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMD,CAPD;;KAAMF,Y;;AASN,MAAMG,WAAW,GAAIF,KAAD,IAAS;AAC3B,sBACE;AAAA,eACGA,KAAK,CAACG,KADT,oBACgB;AAAA;AAAA;AAAA;AAAA,YADhB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMD,W;;AASN,MAAME,MAAM,GAAIJ,KAAD,iBAAU;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACK,OAAvB;AAAA,YAAiCL,KAAK,CAACM;AAAvC;AAAA;AAAA;AAAA;AAAA,QAAzB;;MAAMF,M;;AAEN,SAASG,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BZ,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAyBd,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAM,CAACM,KAAD,EAAOS,QAAP,IAAmBf,QAAQ,CAAC,CAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEZ,QAAIe,KAAK,GAAG,IAAZ;;AACA,QAAGH,OAAH,EAAW;AAETG,MAAAA,KAAK,GAAGC,WAAW,CAAC,MAAI;AACtBF,QAAAA,QAAQ,CAACG,GAAG,IAAIA,GAAG,GAAE,CAAb,CAAR;AACD,OAFkB,EAEjB,IAFiB,CAAnB;AAGD;;AACD,WAAO,MAAI;AACT,UAAGF,KAAH,EAAS;AAAE;AACTG,QAAAA,aAAa,CAACH,KAAD,CAAb;AACD;AACF,KAJD;AAKD,GAdQ,EAcP,CAACH,OAAD,CAdO,CAAT,CANa,CAoBA;;AAEb,QAAMO,aAAa,GAAC,MAAI;AACtBN,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,QAAMQ,SAAS,GAAG,MAAI;AACpBT,IAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AAED,GAHD;;AAKA,QAAMW,SAAS,GAAG,MAAI;AACpBV,IAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAGA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,GAAf;AAAmB,MAAA,OAAO,EAAIU;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,GAAf;AAAmB,MAAA,OAAO,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEc,aAAjB;AAAgC,MAAA,IAAI,EAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjDQV,G;;MAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["\nimport {useState, useEffect} from 'react'\n\nconst MostraVoltas = (props)=>{\n  return (\n  <p>\n    {props.voltas} <br/>\n    <span>Voltas</span>\n  </p>\n  )\n}\n\nconst MostraTempo = (props)=>{\n  return(\n    <p>\n      {props.tempo} <br/>\n      <span>Tempo médio por volta</span>\n    </p>\n  )\n}\n\nconst Button = (props)=> <button onClick={props.onClick}>{props.text}</button>\n\nfunction App() {\n\n  const [numVoltas,setNumVoltas] = useState(14)\n  const [running, setRunning] =  useState(false)\n  const [tempo,setTempo] = useState(0)\n\n  useEffect(()=>{\n    \n    let timer = null\n    if(running){\n\n      timer = setInterval(()=>{\n        setTempo(old => old +1)\n      },1000)\n    }\n    return ()=>{\n      if(timer){ // vai retornar um truthy, valor que é convertido para verdadeiro\n        clearInterval(timer)\n      }\n    }\n  },[running]) //Ao passar o colchetes, ele so vai ser chamado na primeira vez\n  \n  const toggleRunning=()=>{\n    setRunning(!running)\n  }\n\n  const increment = ()=>{\n    setNumVoltas(numVoltas+1)\n    \n  }\n\n  const decrement = ()=>{\n    setNumVoltas(numVoltas-1)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <MostraVoltas voltas ={numVoltas}/>\n      <Button text = '+' onClick = {increment}/>\n      <Button text = '-' onClick={decrement}/>\n      \n\n      <MostraTempo tempo={tempo} />\n      <Button onClick={toggleRunning} text = 'Iniciar'/>\n      <Button text = 'Reiniciar'/>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}